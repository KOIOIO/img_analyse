// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: user.proto

package userclient

import (
	"context"

	"img_analyse/user/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserLoginRequest     = user.UserLoginRequest
	UserLoginResponse    = user.UserLoginResponse
	UserRegisterRequest  = user.UserRegisterRequest
	UserRegisterResponse = user.UserRegisterResponse

	User interface {
		UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error)
		UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*UserRegisterResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}

func (m *defaultUser) UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*UserRegisterResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}
